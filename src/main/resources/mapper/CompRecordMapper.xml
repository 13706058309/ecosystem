<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cykj.mapper.CompRecordMapper">
    <select id="findCompChatRec" resultMap="getCompChat">
            select r.*,u.headImgUrl,u.userName,u.telephone from
            (select max(recoredTime),userID,max(compRecID) as cID from compRecord where tCompID = #{compID} group by userID) t
                left join compRecord r on t.cID = r.compRecID left join userInfo u on r.userID = u.userId limit 10;
    </select>

    <resultMap id="getCompChat" type="com.cykj.entity.CompRecord">
        <id property="compRecId" column="compRecId"></id>
        <result property="userId" column="userId"></result>
        <result property="companyId" column="companyId"></result>
        <result property="recored" column="recored"></result>
        <result property="recoredTime" column="recoredTime"></result>
        <result property="tUserId" column="tUserId"></result>
        <result property="tCompId" column="tCompId"></result>
        <result property="isRead" column="isRead"></result>

        <association property="userInfo" column="userId" javaType="com.cykj.entity.UserInfo">
            <id property="compAndTalId" column="compAndTalId"></id>
            <result property="userName" column="userName"></result>
            <result property="headImgUrl" column="headImgUrl"></result>
            <result property="telephone" column="telephone"></result>
        </association>
    </resultMap>

    <select id="findChatRec" resultMap="getCompChat">
       select r.*,u.headImgUrl from compRecord r left join userInfo u on r.userID = u.userId where
       (r.companyID = #{compID} and  r.userID = #{userID}) or (r.tCompID = #{compID} and r.tuserID = #{userID});
    </select>


    <select id="getChatComp" resultMap="findComp">
            select r.*,u.bUserName,u.logo from
    (select max(recoredTime),userID,max(compRecID) as cID from compRecord where userID = #{userID} group by tCompID) t
        left join compRecord r on t.cID = r.compRecID left join backUser u on r.tCompID = u.bUserID limit 10
    </select>

    <resultMap id="findComp" type="com.cykj.entity.CompRecord">
        <id property="compRecId" column="compRecId"></id>
        <result property="userId" column="userId"></result>
        <result property="companyId" column="companyId"></result>
        <result property="recored" column="recored"></result>
        <result property="recoredTime" column="recoredTime"></result>
        <result property="tUserId" column="tUserId"></result>
        <result property="tCompId" column="tCompId"></result>
        <result property="isRead" column="isRead"></result>

        <association property="backUser" column="tCompID" javaType="com.cykj.entity.BackUser">
            <id property="bUserId" column="bUserId"></id>
            <result property="bUserName" column="bUserName"></result>
            <result property="logo" column="logo"></result>
        </association>
    </resultMap>

    <select id="findChatRecs" resultMap="findComp">
       select r.*,u.logo from compRecord r left join backUser u on r.tCompID = u.buserId where
       (r.companyID = #{compID} and  r.userID = #{userID}) or (r.tCompID = #{compID} and r.tuserID = #{userID});
    </select>

    <insert id="addCompRec" parameterType="com.cykj.entity.CompRecord">
        insert into compRecord (userID, companyID, recored, tUserID, tCompID)
        VALUES (#{userId},#{companyId},#{recored},#{tUserId},#{tCompId})
    </insert>

    <update id="readUserMsg" >
        update compRecord set isRead = 2 where tCompID = #{compID} and tUserID = #{userID}
    </update>

    <update id="readCompMsg" >
        update compRecord set isRead = 2 where companyID = #{compID} and userID = #{userID}
    </update>

</mapper>
